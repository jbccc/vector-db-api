services:
  api:
    container_name: stackai-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stackai
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  db-reset:
    container_name: stackai-db-reset
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stackai
      - SKIP_CONFIRMATION=1
    command: ["python", "scripts/reset_db.py", "--populate"]
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

  db-populate:
    container_name: stackai-db-populate
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stackai
    command: ["python", "scripts/populate_db.py"]
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

  postgres:
    image: postgres:15
    container_name: stackai-postgres
    environment:
      POSTGRES_DB: stackai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d stackai"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    name: stackai-postgres-data

networks:
  default:
    name: stackai-network
